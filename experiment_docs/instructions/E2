# How to run experiments?

[Experiment1: Seccomp: scaling analysis]


# Step1: Launch VM ($num = 1,2,3,4)
#
# $num = 1 => kfuse-retpoline
# $num = 2 => nokfuse-retpoline
# $num = 3 => kfuse-noretpoline
# $num = 4 => nokfuse-noretpoline
cp fs/rootfs.ext4 .
./launch_vm.sh $num 


# Step2: (In VM) ($nfilter = 0, 20, 40, 60, 80, 100, 120, 140, 160 => how many filters attach to the cgroup?)
cd root
./bpf_microbench.out $nfilter 1 getpid
    

[Note]
1. the result has the format 'XXX cycles per getpid'. It means to execute the getpid system call, we need XXX cpu cycles. Clearly, with Seccomp BPF filters attached, we need more cycles to run. 
   And our goal is to demonstrate that with KFuse open, we need less cpu cyles to run the system call.
2. We expected that the kernel with KFuse will be faster(less cycles) than without KFuse (Speed: kfuse-retpoline > nokfuse-retpoline; kfuse-noretpoline > nokfuse-noretpoline), 
   and without retpoline will be faster than with retpoline (Speed: kfuse-noretpoline > kfuse-retpoline; nokfuse-noretpoline > nokfuse-retpoline).
3. This experiment corresponds to part 5.1.2 of the paper, E2 of the artifact appendix.
4. You may need to run multiple times to get the average result.
5. if your results are different from the expected reusts due to different environment(E.g.The values obtained in the experiment are highly dependent on the execution speed of Getpid system call), please focus on the relative relationship.


