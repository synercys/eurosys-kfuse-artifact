# How to run experiments?

[Experiment: cgroup + iPerf]

# Step1: Launch VM ($num = 1,2,3,4)
#
# $num = 1 => kfuse-retpoline
# $num = 2 => nokfuse-retpoline
# $num = 3 => kfuse-noretpoline
# $num = 4 => nokfuse-noretpoline
cp fs/rootfs.ext4 .
./launch_vm.sh $num 

# Step2: (In VM) ($nfilter = 0, 20, 40, 60, 80, 100, 120, 140, 160 => how many filters attach to the cgroup?)
cd root
./cgroup_simple_benchmark $nfilter > log &

# restart VM between iterations => (Ctrl + A) + X => Similar to FAQ Q7

# Step3: (In VM) Use iPerf3 to measure TCP bandwidth
#        Check the following command output or the file `log` 
iperf3 -c 172.16.2.2 -t 30 -P 16 -l 32K


[Note]
1. the result(TCP bandwidth) has the format '[SUM] XXX GBytes XXX Gbits/sec'. 
   And our goal is to demonstrate that with KFuse open, we have greater TCPbandwidth sicne all firewall rules are conatin in one single BPF program.
2. We expected that the kernel with KFuse will be faster(greater bandwidth) than without KFuse (Speed: kfuse-retpoline > nokfuse-retpoline;   kfuse-noretpoline > nokfuse-noretpoline), 
   and without retpoline will be faster than with retpoline (Speed: kfuse-noretpoline > kfuse-retpoline; nokfuse-noretpoline > nokfuse-retpoline).
3. This experiment corresponds to part 5.3 of the paper, E4 of the artifact appendix
4. You may need to run multiple times to get the average result.
5. if your result is unstable, you can pin your tasks on idle CPUs, and fix their frequency.
